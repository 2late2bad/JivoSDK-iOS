@Tutorial {
    @Intro(title: "Basic usage") {
        Some scenarios of how to use SDK
        
        - How to handle user session
        - How to display SDK
        - How to handle Push Notifications
    }
    
    @Section(title: "How to handle user session") {
        @ContentAndMedia {
            Keep track of user activity, and perform the following actions:
            - start session
            - update user info
            - stop session
        }
        
        @Steps {
            @Step {
                Let's assume you have a UserManager class
                that helps you to manage your active user
                
                @Code(name: "UserManager.dart", file: flutter.user_manager_00.dart.sample)
            }
            
            @Step {
                As mandatory, you have to start Jivo session for user
                
                You may also pass `null` as userToken to start incognito session
                
                > Important: Please take a look at <doc:common_user_token> page to learn more about what is userToken
                
                @Code(name: "UserManager.dart", file: flutter.user_manager_01.dart.sample)
            }
            
            @Step {
                Optionally, you may specify some contact info
                
                > Note: It will help you to contact him easier in future
                
                @Code(name: "UserManager.dart", file: flutter.user_manager_02.dart.sample)
            }
        }
    }
    
    @Section(title: "How to display SDK") {
        @ContentAndMedia {
            Next thing is to display the JivoSDK UI onscreen
        }
        
        @Steps {
            @Step {
                Let's assume you have ProfileWidget class
                which is responsible for Profile of your app
                
                @Code(name: "ProfileWidget.dart", file: flutter.profile_widget_00.dart.sample)
            }
            
            @Step {
                First step is to define the additional button
                for opening the support screen
                
                @Code(name: "ProfileWidget.dart", file: flutter.profile_widget_01.dart.sample)
            }
            
            @Step {
                Then, import the JivoSDK module and present SDK
                
                @Code(name: "ProfileWidget.dart", file: flutter.profile_widget_02.dart.sample)
            }
        }
    }
    
    @Section(title: "How to handle Push Notifications") {
        @ContentAndMedia {
            Let's assume you have an AppDelegate class
            that manages your app lifecycle
        }
        
        @Steps {
            @Step {
                In most projects, this class just implements the entry point
                
                @Code(name: "AppDelegate.swift", file: flutter.app_delegate_00.swift.sample)
            }
            
            @Step {
                To support Push Notifications for JivoSDK,
                JivoSDK should take care of related system methods
                
                @Code(name: "AppDelegate.swift", file: flutter.app_delegate_01.swift.sample)
            }
            
            @Step {
                Also, JivoSDK can support User Notifications
                to take care of notifications displaying in foreground
                
                @Code(name: "AppDelegate.swift", file: flutter.app_delegate_02.swift.sample)
            }
        }
    }
}

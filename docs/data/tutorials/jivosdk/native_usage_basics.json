{"variants":[{"paths":["\/tutorials\/jivosdk\/native_usage_basics"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/tutorials\/jivosdk\/native_usage_basics"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"kind":"hero","title":"Basic usage","chapter":"Native app","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Some scenarios of how to use SDK"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"How to handle user session"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"How to display SDK"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"How to customize UI elements"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"How to handle Push Notifications"}]}]}]}]},{"kind":"tasks","tasks":[{"anchor":"How-to-handle-user-session","title":"How to handle user session","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Keep track of user activity, and perform following actions:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"start session"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"update user info"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"stop session"}]}]}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":"native.user_manager_00.swift.sample","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s assume you have a UserManager class"},{"type":"text","text":" "},{"type":"text","text":"that helps you to manage your active user"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"native.user_manager_01.swift.sample","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"As mandatory, you have to start Jivo session for user"}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also pass "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" as userToken"},{"type":"text","text":" "},{"type":"text","text":"to start an incognito session"}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":null},{"code":"native.user_manager_02.swift.sample","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Optionally, you may specify some contact info"}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It will help you contact him easier in future"}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"How-to-display-SDK","title":"How to display SDK","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next thing is to display the JivoSDK UI onscreen"}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":"native.profile_view_controller_00.swift.sample","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s assume you have a HelpViewController class"},{"type":"text","text":" "},{"type":"text","text":"which is responsible for Help Center of your app"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"native.profile_view_controller_01.swift.sample","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"First step is to define the additional case"},{"type":"text","text":" "},{"type":"text","text":"for opening the support screen"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"native.profile_view_controller_02.swift.sample","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then, import JivoSDK module and push JivoSDK into navigation stack"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"native.profile_view_controller_03.swift.sample","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"As an alternative, you may want to present JivoSDK modally over the screen"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"How-to-customize-UI-elements","title":"How to customize UI elements","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You are able to change some captions, colors, and icons"}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":"native.sdk_displaying_delegate_00.swift.sample","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create the class that conforms to "},{"type":"codeVoice","code":"JVDisplayDelegate"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"native.sdk_displaying_delegate_01.swift.sample","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For UI customization, you will need additional “define” methods"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"native.sdk_displaying_delegate_02.swift.sample","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement these additional methods so they return proper values for elements you need"}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, we configure the header"},{"type":"text","text":" "},{"type":"text","text":"to be a purple caption “Friendly Support” with no icon (empty) to the left"}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":null},{"code":"native.sdk_displaying_delegate_03.swift.sample","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Keep the strong reference to your instance,"},{"type":"text","text":" "},{"type":"text","text":"and assign it to "},{"type":"codeVoice","code":"Jivo"},{"type":"text","text":"."},{"type":"codeVoice","code":"Jivo\/display"},{"type":"text","text":"."},{"type":"codeVoice","code":"JVDisplayController\/delegate"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"How-to-handle-Push-Notifications","title":"How to handle Push Notifications","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s assume you have an AppDelegate class"},{"type":"text","text":" "},{"type":"text","text":"that manages your app lifecycle"}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":"native.app_delegate_00.swift.sample","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In most projects, this class just implements the entry point"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"native.app_delegate_01.swift.sample","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To support Push Notifications,"},{"type":"text","text":" "},{"type":"text","text":"JivoSDK should take care of related system methods"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"native.app_delegate_02.swift.sample","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Also, JivoSDK can support User Notifications"},{"type":"text","text":" "},{"type":"text","text":"to take care of notifications displaying in foreground"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"native.app_delegate_10.swift.sample","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"As an alternative, you can just make your AppDelegate to inherit from JVAppDelegate"},{"type":"text","text":" "},{"type":"text","text":"that already implements all of these methods"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"native.app_delegate_11.swift.sample","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Also, with ability to customize notifications handling"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Basic usage","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}]}],"identifier":{"url":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Basic usage","categoryPathComponent":"table","role":"project","category":"Basic usage"},"hierarchy":{"modules":[{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/Native-app","projects":[{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics","sections":[{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-handle-user-session"},{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-display-SDK"},{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-customize-UI-elements"},{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-handle-Push-Notifications"}]}]},{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/React-Native-app","projects":[{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics","sections":[{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-handle-user-session"},{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-display-SDK"},{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-handle-Push-Notifications"}]}]},{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/Flutter-app","projects":[{"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics","sections":[{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-handle-user-session"},{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-display-SDK"},{"kind":"task","reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-handle-Push-Notifications"}]}]}],"reference":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table","paths":[["doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table","doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/$volume","doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/Native-app"],["doc:\/\/org.cocoapods.JivoSDK\/documentation\/JivoSDK"]]},"references":{"native.sdk_displaying_delegate_00.swift.sample":{"syntax":"swift","content":["import Foundation","import UIKit","import JivoSDK","","final class SdkDisplayingDelegate: NSObject, JVDisplayDelegate {","    func jivoDisplay(asksToAppear sdk: Jivo) {","    }","    ","    func jivoDisplay(willAppear sdk: Jivo) {","    }","    ","    func jivoDisplay(didDisappear sdk: Jivo) {","    }","}"],"fileName":"SdkDisplayingDelegate.swift","identifier":"native.sdk_displaying_delegate_00.swift.sample","type":"file","fileType":"swift","highlights":[]},"doc://org.cocoapods.JivoSDK/tutorials/table":{"role":"overview","title":"JivoSDK Samples","abstract":[],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table","kind":"overview","type":"topic","url":"\/tutorials\/table"},"native.profile_view_controller_00.swift.sample":{"syntax":"swift","content":["import Foundation","import UIKit","","fileprivate enum ProfileMenuItem: Int {","    case faq","    case website","}","","final class ProfileViewController: UITableViewController, UITableViewDelegate {","    \/\/ ...","    ","    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {","        switch ProfileMenuItem(rawValue: indexPath.row) {","        case .faq:","            handleProfileMenuItemFaqTap()","        case .website:","            handleProfileMenuItemWebsiteTap()","        case nil:","            break","        }","    }","    ","    private func handleProfileMenuItemFaqTap() {","        \/\/ navigate to faq screen","    }","    ","    private func handleProfileMenuItemWebsiteTap() {","        \/\/ open website in safari","    }","}"],"fileName":"ProfileViewController.swift","identifier":"native.profile_view_controller_00.swift.sample","type":"file","fileType":"swift","highlights":[]},"native.sdk_displaying_delegate_02.swift.sample":{"syntax":"swift","content":["import Foundation","import UIKit","import JivoSDK","","final class SdkDisplayingDelegate: NSObject, JVDisplayDelegate {","    func jivoDisplay(asksToAppear sdk: Jivo) {","    }","    ","    func jivoDisplay(willAppear sdk: Jivo) {","    }","    ","    func jivoDisplay(didDisappear sdk: Jivo) {","    }","    ","    func jivoDisplay(defineText sdk: Jivo, forElement element: JVDisplayElement) -> String? {","        switch element {","        case .headerTitle:","            return \"Friendly Support\"","        default:","            return nil","        }","    }","    ","    func jivoDisplay(defineColor sdk: Jivo, forElement element: JVDisplayElement) -> UIColor? {","        switch element {","        case .headerTitle:","            return UIColor.purple","        default:","            return nil","        }","    }","    ","    func jivoDisplay(defineImage sdk: Jivo, forElement element: JVDisplayElement) -> UIImage? {","        switch element {","        case .headerIcon:","            return UIImage()","        default:","            return nil","        }","    }","}"],"fileName":"SdkDisplayingDelegate.swift","identifier":"native.sdk_displaying_delegate_02.swift.sample","type":"file","fileType":"swift","highlights":[{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39}]},"native.sdk_displaying_delegate_01.swift.sample":{"syntax":"swift","content":["import Foundation","import UIKit","import JivoSDK","","final class SdkDisplayingDelegate: NSObject, JVDisplayDelegate {","    func jivoDisplay(asksToAppear sdk: Jivo) {","    }","    ","    func jivoDisplay(willAppear sdk: Jivo) {","    }","    ","    func jivoDisplay(didDisappear sdk: Jivo) {","    }","    ","    func jivoDisplay(defineText sdk: Jivo, forElement element: JVDisplayElement) -> String? {","        return nil","    }","    ","    func jivoDisplay(defineColor sdk: Jivo, forElement element: JVDisplayElement) -> UIColor? {","        return nil","    }","    ","    func jivoDisplay(defineImage sdk: Jivo, forElement element: JVDisplayElement) -> UIImage? {","        return nil","    }","}"],"fileName":"SdkDisplayingDelegate.swift","identifier":"native.sdk_displaying_delegate_01.swift.sample","type":"file","fileType":"swift","highlights":[{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25}]},"doc://org.cocoapods.JivoSDK/tutorials/table/Flutter-app":{"role":"article","title":"Flutter app","abstract":[],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/Flutter-app","kind":"article","type":"topic","url":"\/tutorials\/table\/flutter-app"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/native_usage_basics#How-to-handle-Push-Notifications":{"role":"pseudoSymbol","title":"How to handle Push Notifications","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-handle-Push-Notifications","kind":"section","type":"section","url":"\/tutorials\/jivosdk\/native_usage_basics#How-to-handle-Push-Notifications"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/native_usage_basics":{"role":"project","title":"Basic usage","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics","kind":"project","type":"topic","url":"\/tutorials\/jivosdk\/native_usage_basics"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/flutter_usage_basics#How-to-handle-user-session":{"role":"pseudoSymbol","title":"How to handle user session","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-handle-user-session","kind":"section","type":"section","url":"\/tutorials\/jivosdk\/flutter_usage_basics#How-to-handle-user-session"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/flutter_usage_basics#How-to-handle-Push-Notifications":{"role":"pseudoSymbol","title":"How to handle Push Notifications","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-handle-Push-Notifications","kind":"section","type":"section","url":"\/tutorials\/jivosdk\/flutter_usage_basics#How-to-handle-Push-Notifications"},"native.user_manager_00.swift.sample":{"syntax":"swift","content":["import Foundation","","struct User {","    let email: String","    let fullName: String?","    let phoneNumber: String?","}","","final class UserManager {","    private(set) var user: User?","    ","    func update(user: User) {","        self.user = user","    }","}"],"fileName":"UserManager.swift","identifier":"native.user_manager_00.swift.sample","type":"file","fileType":"swift","highlights":[]},"doc://org.cocoapods.JivoSDK/tutorials/table/Native-app":{"role":"article","title":"Native app","abstract":[],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/Native-app","kind":"article","type":"topic","url":"\/tutorials\/table\/native-app"},"native.user_manager_01.swift.sample":{"syntax":"swift","content":["import Foundation","import JivoSDK","","struct User {","    let email: String","    let fullName: String?","    let phoneNumber: String?","}","","final class UserManager {","    private(set) var user: User?","    ","    func update(user: User) {","        self.user = user","        configureJivoSession()","    }","    ","    private func configureJivoSession() {","        if let user {","            Jivo.session.startUp(channelID: \"YOUR_CHANNEL_ID\", userToken: user.email)","        }","        else {","            Jivo.session.shutDown()","        }","    }","}"],"fileName":"UserManager.swift","identifier":"native.user_manager_01.swift.sample","type":"file","fileType":"swift","highlights":[{"line":2},{"line":15},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25}]},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/react_usage_basics#How-to-display-SDK":{"role":"pseudoSymbol","title":"How to display SDK","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-display-SDK","kind":"section","type":"section","url":"\/tutorials\/jivosdk\/react_usage_basics#How-to-display-SDK"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/react_usage_basics":{"role":"project","title":"Basic usage","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics","kind":"project","type":"topic","url":"\/tutorials\/jivosdk\/react_usage_basics"},"native.sdk_displaying_delegate_03.swift.sample":{"syntax":"swift","content":["let displayingDelegate = SdkDisplayingDelegate()","self.strongDisplayingDelegate = displayingDelegate","","Jivo.display.delegate = displayingDelegate"],"fileName":"SdkDisplayingDelegate.swift","identifier":"native.sdk_displaying_delegate_03.swift.sample","type":"file","fileType":"swift","highlights":[{"line":1},{"line":2},{"line":4}]},"native.app_delegate_10.swift.sample":{"syntax":"swift","content":["import Foundation","import UIKit","import JivoSDK","","final class AppDelegate: JVAppDelegate {","    override func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","        if super.application(application, didFinishLaunchingWithOptions: launchOptions) {","            \/\/ notification for JivoSDK","        }","        else {","            \/\/ notification for your app","        }","        ","        return true","    }","}"],"fileName":"AppDelegate.swift","identifier":"native.app_delegate_10.swift.sample","type":"file","fileType":"swift","highlights":[{"line":5},{"line":6},{"line":7},{"line":8},{"line":10},{"line":11},{"line":12},{"line":14}]},"native.user_manager_02.swift.sample":{"syntax":"swift","content":["import Foundation","import JivoSDK","","struct User {","    let email: String","    let fullName: String?","    let phoneNumber: String?","}","","final class UserManager {","    private(set) var user: User?","    ","    func update(user: User) {","        self.user = user","        configureJivoSession()","    }","    ","    private func configureJivoSession() {","        if let user {","            let info = JVSessionContactInfo(","                name: user.fullName,","                email: user.email,","                phone: user.phoneNumber","            )","            ","            Jivo.session.startUp(channelID: \"YOUR_CHANNEL_ID\", userToken: user.email)","            Jivo.session.setContactInfo(info)","        }","        else {","            Jivo.session.shutDown()","        }","    }","}"],"fileName":"UserManager.swift","identifier":"native.user_manager_02.swift.sample","type":"file","fileType":"swift","highlights":[{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":27}]},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/flutter_usage_basics":{"role":"project","title":"Basic usage","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics","kind":"project","type":"topic","url":"\/tutorials\/jivosdk\/flutter_usage_basics"},"native.app_delegate_02.swift.sample":{"syntax":"swift","content":["import Foundation","import UIKit","import UserNotifications","import JivoSDK","","final class AppDelegate: UIResponder",", UIApplicationDelegate",", UNUserNotificationCenterDelegate {","    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","        Jivo.notifications.handleLaunch(options: launchOptions)","        UNUserNotificationCenter.current().delegate = self","        return true","    }","    ","    func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {","        Jivo.notifications.setPushToken(data: deviceToken)","    }","    ","    func application(_ application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: Error) {","        Jivo.notifications.setPushToken(data: nil)","    }","    ","    func application(_ application: UIApplication, didReceiveRemoteNotification userInfo: [AnyHashable : Any], fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -> Void) {","        if Jivo.notifications.handleIncoming(userInfo: userInfo, completionHandler: completionHandler) {","            return","        }","        ","        completionHandler(.noData)","    }","    ","    func userNotificationCenter(_ center: UNUserNotificationCenter, willPresent notification: UNNotification, withCompletionHandler completionHandler: @escaping (UNNotificationPresentationOptions) -> Void) {","        Jivo.notifications.configurePresentation(notification: notification, proxyTo: completionHandler) { target, event in","            switch target {","            case .app:","                return []","            case .sdk:","                return [.alert]","            }","        }","    }","    ","    func userNotificationCenter(_ center: UNUserNotificationCenter, didReceive response: UNNotificationResponse, withCompletionHandler completionHandler: @escaping () -> Void) {","        Jivo.notifications.handleUser(response: response)","    }","}"],"fileName":"AppDelegate.swift","identifier":"native.app_delegate_02.swift.sample","type":"file","fileType":"swift","highlights":[{"line":3},{"line":7},{"line":8},{"line":11},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44}]},"native.profile_view_controller_02.swift.sample":{"syntax":"swift","content":["import Foundation","import UIKit","import JivoSDK","","fileprivate enum ProfileMenuItem: Int {","    case support","    case faq","    case website","}","","final class ProfileViewController: UITableViewController, UITableViewDelegate {","    \/\/ ...","    ","    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {","        switch ProfileMenuItem(rawValue: indexPath.row) {","        case .support:","            handleProfileMenuItemSupportTap()","        case .faq:","            handleProfileMenuItemFaqTap()","        case .website:","            handleProfileMenuItemWebsiteTap()","        case nil:","            break","        }","    }","    ","    private func handleProfileMenuItemSupportTap() {","        if let navigationController {","            Jivo.display.push(into: navigationController)","        }","    }","    ","    private func handleProfileMenuItemFaqTap() {","        \/\/ navigate to faq screen","    }","    ","    private func handleProfileMenuItemWebsiteTap() {","        \/\/ open website in safari","    }","}"],"fileName":"ProfileViewController.swift","identifier":"native.profile_view_controller_02.swift.sample","type":"file","fileType":"swift","highlights":[{"line":3},{"line":28},{"line":29},{"line":30}]},"native.app_delegate_00.swift.sample":{"syntax":"swift","content":["import Foundation","import UIKit","","final class AppDelegate: UIResponder",", UIApplicationDelegate {","    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","        return true","    }","}"],"fileName":"AppDelegate.swift","identifier":"native.app_delegate_00.swift.sample","type":"file","fileType":"swift","highlights":[]},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/native_usage_basics#How-to-customize-UI-elements":{"role":"pseudoSymbol","title":"How to customize UI elements","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-customize-UI-elements","kind":"section","type":"section","url":"\/tutorials\/jivosdk\/native_usage_basics#How-to-customize-UI-elements"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/react_usage_basics#How-to-handle-user-session":{"role":"pseudoSymbol","title":"How to handle user session","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-handle-user-session","kind":"section","type":"section","url":"\/tutorials\/jivosdk\/react_usage_basics#How-to-handle-user-session"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/native_usage_basics#How-to-handle-user-session":{"role":"pseudoSymbol","title":"How to handle user session","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-handle-user-session","kind":"section","type":"section","url":"\/tutorials\/jivosdk\/native_usage_basics#How-to-handle-user-session"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/flutter_usage_basics#How-to-display-SDK":{"role":"pseudoSymbol","title":"How to display SDK","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/flutter_usage_basics#How-to-display-SDK","kind":"section","type":"section","url":"\/tutorials\/jivosdk\/flutter_usage_basics#How-to-display-SDK"},"native.app_delegate_11.swift.sample":{"syntax":"swift","content":["import Foundation","import UIKit","import JivoSDK","","final class AppDelegate: JVAppDelegate {","    override func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","        if super.application(application, didFinishLaunchingWithOptions: launchOptions) {","            \/\/ notification for JivoSDK","        }","        else {","            \/\/ notification for your app","        }","        ","        return true","    }","    ","    override func jivo(bannerPresentation sdk: JivoSDK, target: JivoSDKNotificationTarget, event: JivoSDKNotificationEvent, notification: UNNotification) -> UNNotificationPresentationOptions {","        switch target {","        case .app:","            return []","        case .sdk:","            return [.alert]","        }","    }","}"],"fileName":"AppDelegate.swift","identifier":"native.app_delegate_11.swift.sample","type":"file","fileType":"swift","highlights":[{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24}]},"doc://org.cocoapods.JivoSDK/tutorials/table/React-Native-app":{"role":"article","title":"React Native app","abstract":[],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/table\/React-Native-app","kind":"article","type":"topic","url":"\/tutorials\/table\/react-native-app"},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/react_usage_basics#How-to-handle-Push-Notifications":{"role":"pseudoSymbol","title":"How to handle Push Notifications","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/react_usage_basics#How-to-handle-Push-Notifications","kind":"section","type":"section","url":"\/tutorials\/jivosdk\/react_usage_basics#How-to-handle-Push-Notifications"},"native.app_delegate_01.swift.sample":{"syntax":"swift","content":["import Foundation","import UIKit","import JivoSDK","","final class AppDelegate: UIResponder",", UIApplicationDelegate {","    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","        Jivo.notifications.handleLaunch(options: launchOptions)","        return true","    }","    ","    func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {","        Jivo.notifications.setPushToken(data: deviceToken)","    }","    ","    func application(_ application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: Error) {","        Jivo.notifications.setPushToken(data: nil)","    }","    ","    func application(_ application: UIApplication, didReceiveRemoteNotification userInfo: [AnyHashable : Any], fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -> Void) {","        if Jivo.notifications.handleIncoming(userInfo: userInfo, completionHandler: completionHandler) {","            return","        }","        ","        completionHandler(.noData)","    }","}"],"fileName":"AppDelegate.swift","identifier":"native.app_delegate_01.swift.sample","type":"file","fileType":"swift","highlights":[{"line":3},{"line":8},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26}]},"native.profile_view_controller_01.swift.sample":{"syntax":"swift","content":["import Foundation","import UIKit","","fileprivate enum ProfileMenuItem: Int {","    case support","    case faq","    case website","}","","final class ProfileViewController: UITableViewController, UITableViewDelegate {","    \/\/ ...","    ","    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {","        switch ProfileMenuItem(rawValue: indexPath.row) {","        case .support:","            handleProfileMenuItemSupportTap()","        case .faq:","            handleProfileMenuItemFaqTap()","        case .website:","            handleProfileMenuItemWebsiteTap()","        case nil:","            break","        }","    }","    ","    private func handleProfileMenuItemSupportTap() {","    }","    ","    private func handleProfileMenuItemFaqTap() {","        \/\/ navigate to faq screen","    }","    ","    private func handleProfileMenuItemWebsiteTap() {","        \/\/ open website in safari","    }","}"],"fileName":"ProfileViewController.swift","identifier":"native.profile_view_controller_01.swift.sample","type":"file","fileType":"swift","highlights":[{"line":5},{"line":15},{"line":16},{"line":26},{"line":27},{"line":28}]},"native.profile_view_controller_03.swift.sample":{"syntax":"swift","content":["import Foundation","import UIKit","import JivoSDK","","fileprivate enum ProfileMenuItem: Int {","    case support","    case faq","    case website","}","","final class ProfileViewController: UITableViewController, UITableViewDelegate {","    \/\/ ...","    ","    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {","        switch ProfileMenuItem(rawValue: indexPath.row) {","        case .support:","            handleHelpMenuItemSupportTap()","        case .faq:","            handleHelpMenuItemFaqTap()","        case .website:","            handleHelpMenuItemWebsiteTap()","        case nil:","            break","        }","    }","    ","    private func handleProfileMenuItemSupportTap() {","        if let navigationController {","            Jivo.display.push(into: navigationController)","        }","        else {","            Jivo.display.present(over: self)","        }","    }","    ","    private func handleProfileMenuItemFaqTap() {","        \/\/ navigate to faq screen","    }","    ","    private func handleProfileMenuItemWebsiteTap() {","        \/\/ open website in safari","    }","}"],"fileName":"ProfileViewController.swift","identifier":"native.profile_view_controller_03.swift.sample","type":"file","fileType":"swift","highlights":[{"line":17},{"line":19},{"line":21},{"line":31},{"line":32},{"line":33}]},"doc://org.cocoapods.JivoSDK/tutorials/JivoSDK/native_usage_basics#How-to-display-SDK":{"role":"pseudoSymbol","title":"How to display SDK","abstract":[{"type":"text","text":"Some scenarios of how to use SDK"}],"identifier":"doc:\/\/org.cocoapods.JivoSDK\/tutorials\/JivoSDK\/native_usage_basics#How-to-display-SDK","kind":"section","type":"section","url":"\/tutorials\/jivosdk\/native_usage_basics#How-to-display-SDK"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"}],"traits":[{"interfaceLanguage":"occ"}]}]}